package com.zx.moa.ioa.timeAttendance.service.impl;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.zx.moa.ioa.timeAttendance.persist.AttendanceDao;
import com.zx.moa.ioa.timeAttendance.service.IAttendanceService;
import com.zx.moa.util.GlobalVal;
import com.zx.moa.util.gen.entity.ioa.PmPersonnel;

@Service("IAttendanceService")
public class IAttendanceServiceImpl implements IAttendanceService{
	
	@Autowired
	private AttendanceDao attendanceDao;
	
	@Override
	public List<Map<String, Object>> getAttendanceList(HttpServletRequest request, int month_add) {
		List<Map<String, Object>> reslist=null;
		String date_start = "";
		String date_end = "";
		//获取当前登录人
		HttpSession session = request.getSession();
		PmPersonnel pm  = (PmPersonnel)session.getAttribute(GlobalVal.USER_SESSION);

		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
		if(month_add==0){//当月
			 //获取当前月第一天：
	         Calendar c = Calendar.getInstance();    
	         c.add(Calendar.MONTH, month_add);
	         c.set(Calendar.DAY_OF_MONTH,1);
	         date_start = format.format(c.getTime());
	           
	         //获取当前月最后一天
	         Calendar ca = Calendar.getInstance();    
	         ca.set(Calendar.DAY_OF_MONTH, ca.getActualMaximum(Calendar.DAY_OF_MONTH));  
	         date_end = format.format(ca.getTime());
		}else {//上月
			 //获取前月的第一天
	         Calendar   cal_1=Calendar.getInstance(); 
	         cal_1.add(Calendar.MONTH, month_add);
	         cal_1.set(Calendar.DAY_OF_MONTH,1);
	         date_start = format.format(cal_1.getTime());
	         //获取前月的最后一天
	         Calendar cale = Calendar.getInstance();   
	         cale.add(Calendar.MONTH, month_add+1);
	         cale.set(Calendar.DAY_OF_MONTH,0);
	         date_end = format.format(cale.getTime());
		}
		
		Map<String,Object> map = new HashMap<String, Object>();
		map.put("attendance_code", pm.getPersonnel_shortcode());
        map.put("date_start", date_start);
        map.put("date_end", date_end);
        
        reslist = attendanceDao.getAttendanceList(map);
        
        for (Map<String, Object> ma : reslist) {
        	if(ma.get("attendance_workEnd")==null){
        		ma.put("attendance_workEnd", "");
        	}
        	
        	if(ma.get("attendance_workStart")==null){
        		ma.put("attendance_workStart", "");
        	}
		}
        
        for(Map<String,Object> m : reslist){
        	//根据上班日期 往map放星期
        	try {
        		m.put("attendance_week", getWeekday(m.get("attendance_date").toString()));
    		} catch (Throwable e) {
    			e.printStackTrace();
    		}
        	
        	/*switch (Integer.parseInt(m.get("attentdance_status").toString())) {
        	case 0:
    		case 3:
    			m.put("attentdance_status", "03");
        		m.put("attentdance_status_name", "正常");
    		case 1:
    		case 2:
    		case 8:
    		case 11:
    		case '3,1':
    		case '1,3':
    			m.put("attentdance_status", "128");
        		m.put("attentdance_status_name", "未打卡");
    		case 9:
    		case 14:
    		case '3,9':
    		case '9,3':
			}*/

        	
        	if("0".equals(m.get("attentdance_status").toString()) || "3".equals(m.get("attentdance_status").toString())
        			|| "5".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "03");
        		m.put("attentdance_status_name", "正常");
        	}else if("1".equals(m.get("attentdance_status").toString()) || "2".equals(m.get("attentdance_status").toString()) 
        			|| "8".equals(m.get("attentdance_status").toString()) || "11".equals(m.get("attentdance_status").toString())
        			|| "3,1".equals(m.get("attentdance_status").toString()) || "1,3".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "128");
        		m.put("attentdance_status_name", "未打卡");
        	}else if("9".equals(m.get("attentdance_status").toString()) || "14".equals(m.get("attentdance_status").toString()) 
        			|| "3,9".equals(m.get("attentdance_status").toString()) || "9,3".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "9");
        		m.put("attentdance_status_name", "迟到");
        	}else if("10,3".equals(m.get("attentdance_status").toString()) || "3,10".equals(m.get("attentdance_status").toString())
        			|| "10".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "10");
        		m.put("attentdance_status_name", "早退");
        	}else if("2,9".equals(m.get("attentdance_status").toString()) || "9,2".equals(m.get("attentdance_status").toString())
        			|| "13".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "92");
        		m.put("attentdance_status_name", "迟到、未打卡");
        	}else if("1,10".equals(m.get("attentdance_status").toString()) || "10,1".equals(m.get("attentdance_status").toString())
        			|| "12".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "110");
        		m.put("attentdance_status_name", "未打卡、早退");
        	}else if("9,10".equals(m.get("attentdance_status").toString()) || "10,9".equals(m.get("attentdance_status").toString())
        			|| "9,10,3".equals(m.get("attentdance_status").toString()) || "10,9,3".equals(m.get("attentdance_status").toString())
        		    || "15".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "910");
        		m.put("attentdance_status_name", "迟到、早退");
        	}else if("4".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "4");
        		m.put("attentdance_status_name", "请假");
        	}else if("6".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "6");
        		m.put("attentdance_status_name", "调休");
        	}else if("7".equals(m.get("attentdance_status").toString())){
        		m.put("attentdance_status", "7");
        		m.put("attentdance_status_name", "出差");
        	}
        	
        }
		return reslist;
	}

	/**
	 * 指定日期 判断是星期几
	 * @param date
	 * @return
	 */
	public static String getWeekday(String date){//必须yyyy-MM-dd

	    SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");

	    SimpleDateFormat sdw = new SimpleDateFormat("E",Locale.CHINESE);
	    

	    java.util.Date d = null;

	    try {

	    d = sd.parse(date);

	    } catch (ParseException e) {

	    e.printStackTrace();

	    }

	    return sdw.format(d);

	 } 
	
}
